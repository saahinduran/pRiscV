
main.elf:     file format elf32-littleriscv

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000007c  00000204  00000204  00000204  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000280  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00001000  2**0
                  ALLOC
  3 .debug_info   000000ea  00000000  00000000  00001000  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000090  00000000  00000000  000010ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000028  00000000  00000000  0000117a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_ranges 00000018  00000000  00000000  000011a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000017c  00000000  00000000  000011ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000e4  00000000  00000000  00001336  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      00000039  00000000  00000000  0000141a  2**0
                  CONTENTS, READONLY
 10 .debug_frame  0000003c  00000000  00000000  00001454  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000204 <_start>:
#define UART_STS_REG_ADDR         0x104
#define UART_TX_DATA_REG_ADDR     0x108

void __attribute__((section(".init"),naked)) _start(void) {

    asm volatile("la sp, _end_stack");
 204:	04000113          	li	sp,64
}
 208:	00000013          	nop

0000020c <main>:
int main()
{
 20c:	fe010113          	addi	sp,sp,-32
 210:	00812e23          	sw	s0,28(sp)
 214:	02010413          	addi	s0,sp,32
  const uint8_t *msg = "Hello from pRiscV";
 218:	26c00793          	li	a5,620
 21c:	fef42623          	sw	a5,-20(s0)
  // Enable TX
	*(uint32_t *) UART_CTRL_REG_ADDR = 1;
 220:	10000793          	li	a5,256
 224:	00100713          	li	a4,1
 228:	00e7a023          	sw	a4,0(a5)
	

  do
  {
    *(uint32_t *) UART_TX_DATA_REG_ADDR = *msg;
 22c:	fec42783          	lw	a5,-20(s0)
 230:	0007c703          	lbu	a4,0(a5)
 234:	10800793          	li	a5,264
 238:	00e7a023          	sw	a4,0(a5)
    while ( (*(uint32_t *)UART_STS_REG_ADDR & (0x1 << 1) )>> 1);
 23c:	00000013          	nop
 240:	10400793          	li	a5,260
 244:	0007a783          	lw	a5,0(a5)
 248:	0027f793          	andi	a5,a5,2
 24c:	fe079ae3          	bnez	a5,240 <main+0x34>
    msg++;
 250:	fec42783          	lw	a5,-20(s0)
 254:	00178793          	addi	a5,a5,1
 258:	fef42623          	sw	a5,-20(s0)

    
  } while (*(uint8_t *)msg != NULL);
 25c:	fec42783          	lw	a5,-20(s0)
 260:	0007c783          	lbu	a5,0(a5)
 264:	fc0794e3          	bnez	a5,22c <main+0x20>
  
  
  

  while(1);
 268:	0000006f          	j	268 <main+0x5c>
 26c:	6548                	flw	fa0,12(a0)
 26e:	6c6c                	flw	fa1,92(s0)
 270:	7266206f          	j	62996 <_end_text+0x62716>
 274:	70206d6f          	jal	s10,6976 <_end_text+0x66f6>
 278:	6952                	flw	fs2,20(sp)
 27a:	00566373          	csrrsi	t1,utvec,12
	...
