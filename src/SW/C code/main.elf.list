
main.elf:     file format elf32-littleriscv

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000054  00000204  00000204  00000204  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000258  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00001000  2**0
                  ALLOC
  3 .debug_info   000000e3  00000000  00000000  00001000  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000090  00000000  00000000  000010e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000028  00000000  00000000  00001173  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_ranges 00000018  00000000  00000000  0000119b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000013e  00000000  00000000  000011b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000d8  00000000  00000000  000012f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      00000039  00000000  00000000  000013c9  2**0
                  CONTENTS, READONLY
 10 .debug_frame  0000003c  00000000  00000000  00001404  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000204 <_start>:
#define UART_STS_REG_ADDR         0x104
#define UART_TX_DATA_REG_ADDR     0x108

void __attribute__((section(".init"),naked)) _start(void) {

    asm volatile("la sp, _end_stack");
 204:	04000113          	li	sp,64
    asm volatile("add x1,x0,x1");
 208:	001000b3          	add	ra,zero,ra
}
 20c:	00000013          	nop

00000210 <main>:
int main()
{
 210:	fe010113          	addi	sp,sp,-32
 214:	00812e23          	sw	s0,28(sp)
 218:	02010413          	addi	s0,sp,32
  const uint8_t *msg = "Hello from pRiscV";
 21c:	24400793          	li	a5,580
 220:	fef42623          	sw	a5,-20(s0)
	*(uint32_t *) UART_CTRL_REG_ADDR = 1;
 224:	10000793          	li	a5,256
 228:	00100713          	li	a4,1
 22c:	00e7a023          	sw	a4,0(a5)
	
  *(uint32_t *) UART_TX_DATA_REG_ADDR = 'H';
  while( ( (*(uint32_t *)UART_STS_REG_ADDR) & 0x2) >> 1 );
  */

  *(uint32_t *) UART_TX_DATA_REG_ADDR = *msg;
 230:	fec42783          	lw	a5,-20(s0)
 234:	0007c703          	lbu	a4,0(a5)
 238:	10800793          	li	a5,264
 23c:	00e7a023          	sw	a4,0(a5)

  while(1);
 240:	0000006f          	j	240 <main+0x30>
 244:	6548                	flw	fa0,12(a0)
 246:	6c6c                	flw	fa1,92(s0)
 248:	7266206f          	j	6296e <_end_text+0x62716>
 24c:	70206d6f          	jal	s10,694e <_end_text+0x66f6>
 250:	6952                	flw	fs2,20(sp)
 252:	00566373          	csrrsi	t1,utvec,12
	...
